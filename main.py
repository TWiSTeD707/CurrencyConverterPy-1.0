from aiogram import Bot, Dispatcher, types
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram import executor
import currencyAPI

# –¢–æ–∫–µ–Ω API Telegram-–±–æ—Ç–∞
API_TOKEN = ''

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
dp = Dispatcher(bot)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
dp.middleware.setup(LoggingMiddleware())

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤–∞–ª—é—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–∏
keyboard = types.InlineKeyboardMarkup()
keyboard.add(
    types.InlineKeyboardButton(text="üá∑üá∫ RUB/üá™üá∫ EUR", callback_data="EUR_RUB"),
    types.InlineKeyboardButton(text="üá∑üá∫ RUB/üáπüá∑ TRY", callback_data="TRY_RUB"),
    types.InlineKeyboardButton(text="üá∑üá∫ RUB/üá∑üá∏ RSD", callback_data="RSD_RUB"),
    types.InlineKeyboardButton(text="üá∑üá∫ RUB/üá¨üáß GBP", callback_data="GBP_RUB"),
    types.InlineKeyboardButton(text="üá∑üá∫ RUB/üá∫üá∏ USD", callback_data="USD_RUB"),
    types.InlineKeyboardButton(text="üá∑üá∫ RUB/üá≤üáΩ MXB", callback_data="MXB_RUB"),
    types.InlineKeyboardButton(text="üá∑üá∫ RUB/üáØüáµ JPY", callback_data="JPY_RUB"),
    types.InlineKeyboardButton(text="üá∑üá∫ RUB/üá®üá≥ CNY", callback_data="CNY_RUB"),
    types.InlineKeyboardButton(text="üá∑üá∫ RUB/üáÆüá∑ IRR", callback_data="IRR_RUB"))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã? üòâ", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@dp.callback_query_handler(lambda query: query.data in [
    "EUR_RUB", "TRY_RUB", "RSD_RUB", "GBP_RUB", "USD_RUB", "MXB_RUB",
    "JPY_RUB", "CNY_RUB", "AED_RUB"
])
async def process_callback(callback_query: types.CallbackQuery):
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await bot.delete_message(callback_query.message.chat.id,
                             callback_query.message.message_id)
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
    await bot.answer_callback_query(callback_query.id)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞
    currency_pair = callback_query.data

    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π –≤–∞–ª—é—Ç—ã –∏–∑ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã
    target_currency = currency_pair.split("_")[0]

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –∏–∑ API currencyAPI.py
    exchange_rate = currencyAPI.convert_currency(1, target_currency)

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥",
                                            callback_data="back"))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏ –≤ API
    if isinstance(exchange_rate, str):  
        # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏
        await bot.send_message(callback_query.from_user.id,
                               exchange_rate) 
    else:
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π –≤–∞–ª—é—Ç—ã –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
        global target_currency_for_calc
        target_currency_for_calc = target_currency

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫—É—Ä—Å–æ–º
        await bot.send_message(
            callback_query.from_user.id,
            f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å {target_currency}/RUB: {exchange_rate}\n\n–ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö, –∞ –±–æ—Ç –≤–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å—É–º–º—É –≤ {target_currency}",
            reply_markup=keyboard) 

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@dp.callback_query_handler(lambda query: query.data == "back")
async def process_back_callback(callback_query: types.CallbackQuery):
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫—É—Ä—Å–æ–º
    await bot.delete_message(callback_query.message.chat.id,
                             callback_query.message.message_id)
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
    await bot.answer_callback_query(callback_query.id)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await bot.send_message(callback_query.from_user.id,
                           "–ü—Ä–∏–≤–µ—Ç! –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã? üòâ",
                           reply_markup=keyboard) 

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã
@dp.message_handler(lambda message: message.text.isdigit())
async def process_amount(message: types.Message):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    amount = int(message.text)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –∏–∑ API currencyAPI.py
    exchange_rate = currencyAPI.convert_currency(1, target_currency_for_calc)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏ –≤ API
    if isinstance(exchange_rate, str):  
        # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏
        await bot.send_message(message.from_user.id,
                               exchange_rate) 
    else:
        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—É–º–º—ã
        converted_amount = amount / exchange_rate

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—É–º–º–æ–π
        await bot.send_message(message.from_user.id,
                               f"{amount} —Ä—É–±–ª–µ–π = {converted_amount:.2f} {target_currency_for_calc}")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
